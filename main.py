import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHANNEL_USERNAME = "@shkina_design"
CHANNEL_CHAT_ID = "-1002252990214"  # ‚úÖ –¢–í–û–ô ID –ö–ê–ù–ê–õ–ê
WELCOME_IMAGE_URL = "https://i.postimg.cc/DzSnYfxS/photo-2025-10-30-21-09-06.jpg"

async def check_subscription(user_id, context):
    try:
        member = await context.bot.get_chat_member(CHANNEL_CHAT_ID, user_id)
        return member.status in ['member', 'administrator', 'creator']
    except Exception as e:
        logger.error(f"Error: {e}")
        return False

async def start(update, context):
    user_id = update.effective_user.id
    
    welcome_text = "üíñ –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ù–∞—Ç–∞—à–∞ –®–∫–∏–Ω–∞\n–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä –∏ –±—å—é—Ç–∏-–º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥\n\n–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∏ —Å–ø–∏—Å–æ–∫ –∏–∑ 30+ –Ω–µ–±–∞–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤!"
    
    try:
        await update.message.reply_photo(
            photo=WELCOME_IMAGE_URL,
            caption=welcome_text
        )
    except Exception as e:
        await update.message.reply_text(welcome_text)
    
    if await check_subscription(user_id, context):
        await update.message.reply_text("üíñ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã!")
    else:
        keyboard = [
            [InlineKeyboardButton("üíå –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/shkina_design")],
            [InlineKeyboardButton("üå∏ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("üéÅ –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞—Ä–∫–æ–≤!", reply_markup=reply_markup)

async def button_handler(update, context):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    
    if await check_subscription(user_id, context):
        await query.edit_message_text("üíñ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–ø–∏—Å–∫—É –∏–∑ 30+ –Ω–µ–±–∞–Ω–∞–ª—å–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤!")
    else:
        await query.edit_message_text("üíî –ù–µ –≤–∏–∂—É —Ç–≤–æ–µ–π –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑")

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler, pattern="check"))
    print("Bot started!")
    application.run_polling()

if name == "main":
    main()